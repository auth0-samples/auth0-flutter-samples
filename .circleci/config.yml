version: 2.1
orbs:
  android: circleci/android@2
  macos: circleci/macos@2
  flutter: circleci/flutter@1
  local-android:
    orbs:
      android: circleci/android@2
    commands:
      prepare-config:
        description: "Prepares the environment configuration files"
        steps:
          - run:
              name: Prepare Environment Configuration
              command: |
                cp .env.example .env
                sed -i "s/{DOMAIN}/$AUTH0_DOMAIN/" .env
                sed -i "s/{CLIENT_ID}/$AUTH0_CLIENT_ID/" .env
                sed -i "s/# AUTH0_CUSTOM_SCHEME=/AUTH0_CUSTOM_SCHEME=demo/" .env

                mv android/app/src/main/res/values/strings.xml.example android/app/src/main/res/values/strings.xml
                sed -i "s/{DOMAIN}/$AUTH0_DOMAIN/" android/app/src/main/res/values/strings.xml

                mv android/local.properties.ci android/local.properties
              working_directory: ./sample
      run-smoke-tests:
        description: "Runs the Android smoke tests"
        parameters:
          android_simulator:
            type: string
        steps:
          - run:
              name: Create screenshots artifact directory
              command: mkdir android-screenshots
          - android/create-avd:
              avd-name: auth0_sample_avd
              system-image: << parameters.android_simulator >>
              install: true
          - android/accept-licenses
          - android/start-emulator:
              avd-name: auth0_sample_avd
              no-window: true
              restore-gradle-cache-prefix: v1a
              post-emulator-launch-assemble-command: ""
              post-emulator-wait-steps:
                - run:
                    name: Disable Chrome welcome prompt
                    command: adb shell 'echo "chrome --disable-fre --no-default-browser-check --no-first-run" > /data/local/tmp/chrome-command-line'
                - run:
                    name: Enable ADB Root
                    command: adb root
          - android/run-tests:
              max-tries: 1
              working-directory: ./sample/android
          - run:
              name: Copy screenshots
              command: adb pull /storage/emulated/0/Android/data/com.auth0.sample/files/Pictures android-screenshots
              when: always
          - store_artifacts:
              path: android-screenshots/Pictures
parameters:
  flutter_version:
    type: string
    default: 3.0.5
jobs:
  analyze_and_test:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./sample
          flutter_version: << pipeline.parameters.flutter_version >>
      - local-android/prepare-config
      - run:
          name: Analyze package
          command: flutter analyze
          working_directory: ./sample
      - run:
          name: Tests
          command: flutter test
          working_directory: ./sample
  smoke_test_android:
    parameters:
        android_simulator:
          type: string
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2022.06.2
    steps:
      - run:
          name: Guard Smoke Tests
          command: |
            if ! [[ -z "$CIRCLE_PR_NUMBER" ]]; then
                circleci-agent step halt
            fi
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./sample
          flutter_version: << pipeline.parameters.flutter_version >>
      - local-android/prepare-config
      - run:
          name: Build Android app
          command: flutter build apk
          working_directory: ./sample
      - local-android/run-smoke-tests:
          android_simulator: << parameters.android_simulator >>
      - android/save-gradle-cache:
          cache-prefix: v1a
      - run:
          name: Delay shutdown
          command: sleep 60
          when: always
  test_ios:
    parameters:
      ios_simulator:
        type: string
    macos:
      xcode: '13.0.0'
    environment:
      BUNDLE_RETRY: 3
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
    steps:
      - checkout
      - macos/preboot-simulator:
          version: '15.0'
          platform: iOS
          device: << parameters.ios_simulator >>
      - flutter/install_sdk_and_pub:
          app-dir: ./sample
          flutter_version: << pipeline.parameters.flutter_version >>
      - flutter/install_ios_pod:
          app-dir: ./sample
      - run:
          name: Run iOS tests
          command: |
            printf '%s\n%s\n%s' "AUTH0_DOMAIN=$AUTH0_DOMAIN" "AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID" 'AUTH0_CUSTOM_SCHEME=demo' >> ../.env
            pod install
            SCHEME=Runner
            WORKSPACE="$SCHEME".xcworkspace
            SIMULATOR='platform=iOS Simulator,name=<< parameters.ios_simulator >>'
            if [ -z "$CIRCLE_PR_NUMBER" ]; then
              xcodebuild test -scheme "$SCHEME" -workspace "$WORKSPACE" -destination "$SIMULATOR"
            else
              xcodebuild test -scheme "$SCHEME" -workspace "$WORKSPACE" -destination "$SIMULATOR" -skip-testing:"$SCHEME"UITests
            fi
          working_directory: ./sample/ios
workflows:
  build_and_test:
    jobs:
      - analyze_and_test
      - smoke_test_android:
          android_simulator: system-images;android-32;google_apis;x86_64
          requires:
            - analyze_and_test
      - test_ios:
          ios_simulator: iPhone 13
          requires:
            - analyze_and_test
